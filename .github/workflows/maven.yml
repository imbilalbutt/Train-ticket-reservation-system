# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_DIR: ./Reservation-System  # POM is in this subdirectory
  POSTGRES_DB: testdb
  POSTGRES_USER: testuser
  POSTGRES_PASSWORD: testpassword
  SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5433/$POSTGRES_DB
  SPRING_DATASOURCE_USERNAME: $POSTGRES_USER
  SPRING_DATASOURCE_PASSWORD: $POSTGRES_PASSWORD


jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: PWD Directory 1
        run: pwd
      #      /home/runner/work/Train-ticket-reservation-system/Train-ticket-reservation-system

      - name: List Directory 1
        run: ls

      - name: Change Directory
        run: cd ./Reservation-System

      - name: List Directory 2
        run: ls

      - name: PWD Directory 2
        run: pwd

      #    - name: Check Directory 3
      #      run: pwd

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Verify environment
        run: |
          echo "Java version:"
          java -version
          echo "Maven version:"
          mvn --version
          echo "Project structure:"
          ls -la $BUILD_DIR

      - name: Wait for PostgreSQL to be ready
        run: sleep 10  # Give PostgreSQL time to start

      - name: Build with Maven
        #      run: mvn -B package -DskipTests
        #      working-directory: ./Reservation-System
        run: mvn -B package -DskipTests
        working-directory: ${{ env.BUILD_DIR }}
        env:
          SPRING_DATASOURCE_URL: ${{ env.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ env.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ env.SPRING_DATASOURCE_PASSWORD }}

      - name: Run tests
        run: mvn -B test
        working-directory: ./Reservation-System
        env:
          SPRING_DATASOURCE_URL: ${{ env.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ env.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ env.SPRING_DATASOURCE_PASSWORD }}