## Connect to docker
# Should match with docker-compose
server.port=8081


## Optional legacy config - usually not needed with Spring Boot 2+
##spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

# clear;"/Applications/Postgres.app/Contents/Versions/15/bin/psql" -p5432 "imbilalbutt"

#spring.main.allow-bean-definition-overriding=true

#server.port=8081
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true


# clear;"/Applications/Postgres.app/Contents/Versions/15/bin/psql" -p5432 "lhr_rsv"

# Connect to locally installed PostGreSQL
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect
#spring.datasource.url=jdbc:postgresql://localhost:5433/lhr_rsv
#spring.datasource.username=imbilalbutt
#spring.datasource.password=password@123
#spring.datasource.driver-class-name=org.postgresql.Driver

############### DOCKER
# If want to connect to PostGres in Docker --> just make sure the user name and password matches with docker-compose
# Will be overridden by environment variables from docker-compose
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/lhr_rsv}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:imbilalbutt}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQL81Dialect}

# Some other configs
spring.datasource.dbcp2.initial-size=0
spring.datasource.dbcp2.max-idle=5
spring.datasource.dbcp2.min-idle=2
spring.datasource.dbcp2.max-total=8
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy





##### JPA & Hibernate
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
##spring.jpa.show-sql=true
##spring.jpa.properties.hibernate.format_sql=true



#####  PostgreSQL Docker connection
#spring.datasource.url=jdbc:postgresql://postgres:5432/lhr_rsv
#spring.datasource.username=postgres
#spring.datasource.password=passw0rd
#spring.datasource.driver-class-name=org.postgresql.Driver



##### DBCP2 Connection Pool
#spring.datasource.dbcp2.initial-size=0
#spring.datasource.dbcp2.max-idle=5
#spring.datasource.dbcp2.min-idle=2
#spring.datasource.dbcp2.max-total=8



# In case of MySQL
#spring.datasource.url=jdbc:mysql://localhost:3306/springsecurity
#spring.datasource.username=root
#spring.datasource.password =password
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect


#server.servlet.context-path=/
#  /Users/imbilalbutt/Downloads/jetty-home-12.0.23/start.jar
#server.jetty.acceptors=-1 # Number of acceptor threads to use. When the value is -1..

#server.http2.enabled=true
#
#spring.main.web-application-type=servlet

#Disabling the Web Server
#spring.main.web-application-type=none
#Configure SSL
#server.port=9090
#server.ssl.key-store=classpath:keystore.jks
#server.ssl.key-store-password=secret
#server.ssl.key-password=another-secret
server.servlet.context-path=/Reservation-System
server.jetty.threads.max=200
server.jetty.threads.min=10
server.jetty.threads.idle-timeout=60000ms
server.jetty.accesslog.append=true
server.jetty.accesslog.filename=./logs/jetty-access.log
server.jetty.accesslog.retention-period=31