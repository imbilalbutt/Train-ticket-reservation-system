version: '3.8'

# Structured way of running commands

# docker run --name myPostgres -p 5432:5432 -e POSTGRES_USER=imbilalbutt -e POSTGRES_PASSWORD=password  postgres:9.6

# docker run -p 8081:4000 --name reservation-system-v1  reservation-system:v1

# docker run -p 3000:4000 --name reservation-system-v4 reservation-system:v4

# docker-compose -f docker-compose.yml up
#  docker-compose -f docker-compose.yml up

# docker-compose -f docker-compose.yml down


# docker build -t reservation-system:v1.0 .


services:
  postgres:
    image: postgres:9.6
    container_name: myPostgres
    restart: always
    ports:
#      - host port (my laptop) : container port
      - "5432:5432"

#    Environment variables
    environment:
          POSTGRES_DB: lhr_rsv
          POSTGRES_USER: imbilalbutt
          POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
          - app-network

  reservation-system:
    image: reservation-system:v2.0  # Use pre-built image, comment out build command if you want to use this line
#    build: .
    container_name: reservation-system
    restart: always
    ports:
      - "9090:4000" # host:docker_container -> map docker_container port to localhost port
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/lhr_rsv
      SPRING_DATASOURCE_USERNAME: imbilalbutt
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQL81Dialect
      SERVER_PORT: 4000 # Must match EXPOSE (in dockerfile) and application.properties
      SERVER_SERVLET_CONTEXT_PATH: /Reservation-System
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
