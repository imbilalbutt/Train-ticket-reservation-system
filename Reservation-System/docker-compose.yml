version: '3.8'

# Structured way of running commands

# docker run --name myPostgres -p 5432:5432 -e POSTGRES_USER=imbilalbutt -e POSTGRES_PASSWORD=password  postgres:9.6

# docker run -p 8081:4000 --name reservation-system-v1  reservation-system:v1

# docker run -p 3000:4000 --name reservation-system-v4 reservation-system:v4

# docker-compose -f docker-compose.yml up
#  docker-compose -f docker-compose.yml up

# docker-compose -f docker-compose.yml down


# docker build -t reservation-system:v1.0 .

# docker exec -it my_postgres_db psql -U imbilalbutt -d lhr_rsv -c "SELECT * FROM users;"

services:
  #       Should match with "db-service" at line 23, 68, 73.
  db-service:
#    build:
#      context: .
#      dockerfile: Dockerfile

    container_name: reservation-system-db
    image: postgres:9.3
    restart: always

#    Environment variables
    environment:
          POSTGRES_DB: lhr_rsv
          POSTGRES_USER: imbilalbutt
          POSTGRES_PASSWORD: password
    volumes:
      - reservation_system_data:/var/lib/postgresql/
#     # SQL scripts will execute alphabetically
#      - ./src/db-scripts:/docker-entrypoint-initdb.d # Mount SQL scripts

    ports:
      #      - host port (my laptop) : container port
      - "5400:5432"

    networks:
          - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U imbilalbutt -d lhr_rsv" ]
      interval: 5s
      timeout: 5s
      retries: 5

  reservation-system:
#    image: reservation-system:v2.0  # Use pre-built image, comment out build command if you want to use this line
    build:
      context: .
      dockerfile: Dockerfile

    container_name: reservation-system
    restart: always
    ports:
      - "9000:4000" # host:docker_container -> map docker_container port to localhost port
#    depends_on:
#      - postgres
    depends_on:
      #       Should match with "db-service" at line 23, 68, 73.
      db-service:
        condition: service_healthy
    environment:

#    db-service ==> service _ name (++++) service will be used in jdbc url making. # Should match with "db-service" at line 23, 68, 73.
      SPRING_DATASOURCE_URL: jdbc:postgresql://db-service:5432/lhr_rsv
      SPRING_DATASOURCE_USERNAME: imbilalbutt
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
#      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQL81Dialect
      SERVER_PORT: 4000 # Must match EXPOSE (in dockerfile) and application.properties
      SERVER_SERVLET_CONTEXT_PATH: /reservation-system
    networks:
      - app-network

volumes:
  reservation_system_data:

networks:
  app-network:
    driver: bridge

