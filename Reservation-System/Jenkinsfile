//  java -jar $JETTY_HOME/start.jar --add-modules=http
//  java -jar $JETTY_HOME/start.jar -Djetty.http.port=9090
//  java -jar $WILDFLY_HOME/standalone.sh --add-modules=http
// touch ~/.bash_profile; open ~/.bash_profile
// source ~/.bash_profile

pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "M3"
    }

    stages {
        stage{
            environment {
                // Configure these variables in Jenkins credentials or directly here
                GIT_REPO = 'https://github.com/imbilalbutt/Train-ticket-reservation-system.git'
                BRANCH = 'main' // or your development branch
                M2_HOME='/Users/imbilalbutt/Downloads/apache-maven-3.9.11/bin'
                JETTY_HOME = '/Users/imbilalbutt/Downloads/jetty-home-12.0.23/' // Set your JBoss home directory

                // JBOSS_DEPLOY_DIR = "${JBOSS_HOME}/standalone/deployments"
                POSTGRES_JDBC_URL = 'jdbc:postgresql://localhost:5433/lhr_rsv'
                POSTGRES_USER = 'imbilalbutt' // Use credentials instead for production
                POSTGRES_PASSWORD = 'password@123' // Use credentials instead for production
             }
         }

         stage('Run Tests') {
             steps {
                 sh 'mvn test'
                 echo 'Tests completed successfully'
             }

             post {
                 failure {
                     echo 'Tests failed! Pipeline aborted.'
                     // Add notification steps here (send email)
                 }
             }
         }

          stage('Build with Maven') {
             steps {
                 sh 'mvn clean package -DskipTests' // Tests already run in previous stage
                 echo 'Application built successfully'
             }

             post {
//              If Maven was able to run the tests, even if some of the test
//              failed, record the test results and archive the jar file.
                 success {
                     junit '**/target/surefire-reports/TEST-*.xml'
                     archiveArtifacts 'target/*.jar'
                 }

                 failure {
                     echo 'Build failed! Pipeline aborted.'
                 }
             }
         }

          stage('Deploy to Jetty') {
            steps {

                def jarFile = findFiles(glob: 'target/*.jar')[0].path

            }
          }


//         stage('Build') {
//             steps {
//                 echo 'Building initiated'
//                 // Get some code from a GitHub repository
//                 git 'https://github.com/imbilalbutt/Train-ticket-reservation-system.git'
//
//                 // Run Maven on a Unix agent.
//                 sh "mvn -Dmaven.test.failure.ignore=true clean package"
//
//                 // To run Maven on a Windows agent, use
//                 // bat "mvn -Dmaven.test.failure.ignore=true clean package"
//             }
//
//             post {
//                 // If Maven was able to run the tests, even if some of the test
//                 // failed, record the test results and archive the jar file.
//                 success {
//                     junit '**/target/surefire-reports/TEST-*.xml'
//                     archiveArtifacts 'target/*.jar'
//                 }
//             }
//         }
//          stage('Deploy') {
//          }
     }
}
